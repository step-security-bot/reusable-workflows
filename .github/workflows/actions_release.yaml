name: Release GitHub Actions

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string

permissions:
  contents: read

jobs:
  release:
    environment:
      name: releaseNewActionVersion
    permissions:
      contents: write
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Generate SBOM
        uses: anchore/sbom-action@e8d2a6937ecead383dfe75190d104edd1f9c5751 # v0.16.0
        with:
          path: "./"
          output-file: ./sbom-${{ github.event.inputs.tag }}.spdx.json
          format: "spdx"

      - name: Create and Push Tag
        run: |
          git tag ${{ github.event.inputs.tag }}
          git push origin ${{ github.event.inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        run: gh release create ${{ github.event.inputs.tag }} --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload SBOM as Release Asset
        run: gh release upload ${{ github.event.inputs.tag }} *.spdx.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Semantic Tag
        run: |
          TAG=${{ github.event.inputs.tag }}
          SEMANTIC_TAG=$(echo $TAG | grep -oP '^v\d+')
          git tag -f $SEMANTIC_TAG $TAG
          git push -f origin $SEMANTIC_TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate and Upload Provenance File
        run: |
          echo "Generating provenance.json"
          OWNER="${{ github.repository_owner }}"
          REPO="${{ github.event.repository.name }}"
          TAG_NAME="${{ github.event.inputs.tag }}"
          COMMIT_SHA=$(git show-ref -s $TAG_NAME)
          TAG_DETAILS=$(gh api repos/$OWNER/$REPO/git/commits/$COMMIT_SHA | jq '.')
          jq -n --arg repository "${{ github.repository }}" \
               --arg workflow "${{ github.workflow }}" \
               --arg run_id "${{ github.run_id }}" \
               --arg run_attempt "${{ github.run_attempt }}" \
               --arg tag "$TAG_NAME" \
               --arg commit_sha "$COMMIT_SHA" \
               --argjson tag_details "$TAG_DETAILS" \
               '{"repository": $repository, "workflow": $workflow, "run_id": $run_id, "run_attempt": $run_attempt, "tag": $tag, "commit_sha": $commit_sha, "tag_details": $tag_details}' > provenance.json
          cat provenance.json
          gh release upload ${{ github.event.inputs.tag }} provenance.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Hashes
        shell: bash
        id: hash
        run: |
          echo "Generating hashes for artifacts"
          HASHES=$(sha256sum sbom-${{ github.event.inputs.tag }}.spdx.json provenance.json | base64 -w0)
          echo "hashes=$HASHES" >> "$GITHUB_OUTPUT"
          echo "hashes=$HASHES"

      - name: Create and Upload provenance_verifier.sh
        run: |
          echo '#!/bin/bash' > provenance_verifier.sh
          echo '# Install slsa-verifier from https://github.com/slsa-framework/slsa-verifier' >> provenance_verifier.sh
          echo '# Format: slsa-verifier verify-artifact --provenance-path <path to multiple.intoto.jsonl> --source-uri github.com/${{ github.repository }} <path to sbom-${{ github.event.inputs.tag }}.spdx.json> <path to provenance.json>' >> provenance_verifier.sh
          echo '# For example: slsa-verifier verify-artifact --provenance-path ~/${{ github.repository }}/multiple.intoto.jsonl --source-uri github.com/${{ github.repository }} ~/${{ github.repository }}/sbom-${{ github.event.inputs.tag }}.spdx.json ~/${{ github.repository }}/provenance.json' >> provenance_verifier.sh
          chmod +x provenance_verifier.sh
          cat provenance_verifier.sh
          gh release upload ${{ github.event.inputs.tag }} provenance_verifier.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # This step calls the generic workflow to generate provenance.
  provenance:
    needs: [release]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.9.0
    with:
      base64-subjects: "${{ needs.release.outputs.hashes }}"
      # Upload provenance to a new release
      upload-assets: true
      upload-tag-name: "${{ github.event.inputs.tag }}"
